//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************

namespace SDKTemplate
{
    [default_interface]
    runtimeclass Scenario1_Discovery : Windows.UI.Xaml.Controls.Page
    {
        Scenario1_Discovery();

        Windows.Foundation.Collections.IObservableVector<Object> KnownDevices{ get; };

        Windows.UI.Xaml.Controls.ListView ResultsListView{ get; };
        Boolean Not(Boolean value);
    }

    [default_interface]
    runtimeclass Scenario2_Client : Windows.UI.Xaml.Controls.Page
    {
        Scenario2_Client();
    }

    [default_interface]
    runtimeclass Scenario3_ServerForeground : Windows.UI.Xaml.Controls.Page
    {
        Scenario3_ServerForeground();
    }

    [default_interface]
    runtimeclass Scenario4_ServerBackground : Windows.UI.Xaml.Controls.Page
    {
        Scenario4_ServerBackground();
    }

    /// <summary>
    ///     Display class used to represent a BluetoothLEDevice in the Device list
    /// </summary>
    runtimeclass BluetoothLEDeviceDisplay : Windows.UI.Xaml.Data.INotifyPropertyChanged
    {
        Windows.Devices.Enumeration.DeviceInformation DeviceInformation{ get; };

        String Id{ get; };
        String Name{ get; };
        Boolean IsPaired{ get; };
        Boolean IsConnected{ get; };
        Boolean IsConnectable{ get; };

        IMapView<String, Object> Properties{ get; };

        Windows.UI.Xaml.Media.Imaging.BitmapImage GlyphBitmapImage{ get; };

        void Update(Windows.Devices.Enumeration.DeviceInformationUpdate deviceInfoUpdate);
    };

    // Since we run the calculator server as an in-process background task,
    // this declaration is not required. However, we leave it here to make it easier
    // to move the task out-of-process (where the declaration becomes required).
    runtimeclass CalculatorServerBackgroundTask : [default] Windows.ApplicationModel.Background.IBackgroundTask
    {
        CalculatorServerBackgroundTask();
    }
}
